---
Resources:
  NeatoLambda1ServiceRoleBFEC1003:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
    Metadata:
      aws:cdk:path: ExampleStepFunctionsStack/NeatoLambda1/ServiceRole/Resource
  NeatoLambda1066E0928:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: 'def handler(event, _): return event;'
      Role:
        Fn::GetAtt:
        - NeatoLambda1ServiceRoleBFEC1003
        - Arn
      Handler: index.handler
      Runtime: python3.9
    DependsOn:
    - NeatoLambda1ServiceRoleBFEC1003
    Metadata:
      aws:cdk:path: ExampleStepFunctionsStack/NeatoLambda1/Resource
  NeatoLambda2ServiceRole3D4B1360:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
      - Fn::Join:
        - ''
        - - 'arn:'
          - Ref: AWS::Partition
          - ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
    Metadata:
      aws:cdk:path: ExampleStepFunctionsStack/NeatoLambda2/ServiceRole/Resource
  NeatoLambda2C0167448:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: 'def handler(event, _): return event;'
      Role:
        Fn::GetAtt:
        - NeatoLambda2ServiceRole3D4B1360
        - Arn
      Handler: index.handler
      Runtime: python3.9
    DependsOn:
    - NeatoLambda2ServiceRole3D4B1360
    Metadata:
      aws:cdk:path: ExampleStepFunctionsStack/NeatoLambda2/Resource
  SimpleStateMachineRole0CBC135A:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
              Fn::Join:
              - ''
              - - states.
                - Ref: AWS::Region
                - ".amazonaws.com"
        Version: '2012-10-17'
    Metadata:
      aws:cdk:path: ExampleStepFunctionsStack/SimpleStateMachine/Role/Resource
  SimpleStateMachineRoleDefaultPolicyF5E1CB8E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
        - Action: lambda:InvokeFunction
          Effect: Allow
          Resource:
          - Fn::GetAtt:
            - NeatoLambda1066E0928
            - Arn
          - Fn::GetAtt:
            - NeatoLambda2C0167448
            - Arn
          - Fn::Join:
            - ''
            - - Fn::GetAtt:
                - NeatoLambda1066E0928
                - Arn
              - ":*"
          - Fn::Join:
            - ''
            - - Fn::GetAtt:
                - NeatoLambda2C0167448
                - Arn
              - ":*"
        - Action: dynamodb:PutItem
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ":dynamodb:"
              - Ref: AWS::Region
              - ":"
              - Ref: AWS::AccountId
              - ":table/"
              - Fn::ImportValue: ExampleStorageStack:ExportsOutputRefTableCD117FA1D18A8047
        Version: '2012-10-17'
      PolicyName: SimpleStateMachineRoleDefaultPolicyF5E1CB8E
      Roles:
      - Ref: SimpleStateMachineRole0CBC135A
    Metadata:
      aws:cdk:path: ExampleStepFunctionsStack/SimpleStateMachine/Role/DefaultPolicy/Resource
  SimpleStateMachineE8E2CF40:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      RoleArn:
        Fn::GetAtt:
        - SimpleStateMachineRole0CBC135A
        - Arn
      DefinitionString:
        Fn::Join:
        - ''
        - - '{"StartAt":"NeatoLambda1Task","States":{"NeatoLambda1Task":{"Next":"PutItem","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","ResultPath":"$.lambdaResult","Resource":"arn:'
          - Ref: AWS::Partition
          - ':states:::lambda:invoke","Parameters":{"FunctionName":"'
          - Fn::GetAtt:
            - NeatoLambda1066E0928
            - Arn
          - '","Payload.$":"$"}},"PutItem":{"Next":"NeatoLambda2Task","Type":"Task","ResultPath":"$.dynamoResult","Resource":"arn:'
          - Ref: AWS::Partition
          - ':states:::dynamodb:putItem","Parameters":{"Item":{"id":{"S.$":"$.hello"}},"TableName":"'
          - Fn::ImportValue: ExampleStorageStack:ExportsOutputRefTableCD117FA1D18A8047
          - '"}},"NeatoLambda2Task":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Type":"Task","ResultPath":"$.lambdaResult","Resource":"arn:'
          - Ref: AWS::Partition
          - ':states:::lambda:invoke","Parameters":{"FunctionName":"'
          - Fn::GetAtt:
            - NeatoLambda2C0167448
            - Arn
          - '","Payload.$":"$"}}}}'
    DependsOn:
    - SimpleStateMachineRoleDefaultPolicyF5E1CB8E
    - SimpleStateMachineRole0CBC135A
    Metadata:
      aws:cdk:path: ExampleStepFunctionsStack/SimpleStateMachine/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/11PSwrCMBA9i/s02m48QEWoKJR6gDJNI475SZNUSsjdbVMFcfU+w5s3U9Aip/kGXjZjvcgkdjRcHTBBZqsNElTXAw1Hr5lDo0l5018eCYKioTGSL3bC2khk0yJXFol1/Hn7JGzrwApLwzmtrfRoBCeHSYMytXeV4+ovkI5x/ALsjjrV/OoYUzG3xg8sTUuje1yPO8EI23xPd/N7D4uYDV47VJw2K74BMb0DxvoAAAA=
    Metadata:
      aws:cdk:path: ExampleStepFunctionsStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - af-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-east-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-northeast-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-northeast-2
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-southeast-1
      - Fn::Equals:
        - Ref: AWS::Region
        - ap-southeast-2
      - Fn::Equals:
        - Ref: AWS::Region
        - ca-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - cn-north-1
      - Fn::Equals:
        - Ref: AWS::Region
        - cn-northwest-1
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-central-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-north-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-1
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-2
      - Fn::Equals:
        - Ref: AWS::Region
        - eu-west-3
      - Fn::Equals:
        - Ref: AWS::Region
        - me-south-1
      - Fn::Equals:
        - Ref: AWS::Region
        - sa-east-1
      - Fn::Equals:
        - Ref: AWS::Region
        - us-east-1
      - Fn::Equals:
        - Ref: AWS::Region
        - us-east-2
    - Fn::Or:
      - Fn::Equals:
        - Ref: AWS::Region
        - us-west-1
      - Fn::Equals:
        - Ref: AWS::Region
        - us-west-2
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: "/cdk-bootstrap/hnb659fds/version"
    Description: Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
    - Assert:
        Fn::Not:
        - Fn::Contains:
          - - '1'
            - '2'
            - '3'
            - '4'
            - '5'
          - Ref: BootstrapVersion
      AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
        with a recent version of the CDK CLI.
